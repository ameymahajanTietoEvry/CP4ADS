
# CustomerStatus
CustomerStatus#concept.label = Customer Status
CustomerStatus.bronze#instance.label = Bronze
CustomerStatus.gold#instance.label = Gold
CustomerStatus.silver#instance.label = Silver

# Dimension
Dimension#concept.documentation = 
Dimension#concept.label = Dimension
Dimension.letter#instance.label = Letter
Dimension.pack1#instance.label = Pack 1
Dimension.pack2#instance.label = Pack 2
Dimension.pack3#instance.label = Pack 3

# Method
Method#concept.label = Method
Method.Method(boolean,Pickup,Transport)#phrase.navigation = a new {Method} where {0, next day} {1, pickup} {2, transport}
Method.nextDay#phrase.action[0] = {this} gets next day only if {next day}
Method.nextDay#phrase.action[1] = make it {next day} that {this} is next day
Method.nextDay#phrase.action[1].deprecated = true
Method.nextDay#phrase.navigation = {this} is next day
Method.nextDay#phrase.negative_predicate = {this} is not next day
Method.nextDay#phrase.negative_predicate_setter = {this} does not get next day
Method.nextDay#phrase.positive_predicate_setter = {this} gets next day
Method.pickup#phrase.action = set the pickup of {this} to {pickup}
Method.pickup#phrase.clearer = clear the pickup of {this}
Method.pickup#phrase.navigation = {pickup} of {this}
Method.transport#phrase.action = set the transport of {this} to {transport}
Method.transport#phrase.clearer = clear the transport of {this}
Method.transport#phrase.navigation = {transport} of {this}

# Pickup
Pickup#concept.label = Pickup
Pickup.dropoff#instance.label = Dropoff
Pickup.pickup#instance.label = Pickup

# Result
Result#concept.label = Result
Result.ETA#phrase.action = set the ETA of {this} to {ETA}
Result.ETA#phrase.clearer = clear the ETA of {this}
Result.ETA#phrase.navigation = {ETA} of {this}
Result.Result(ilog.rules.brl.Time,double)#phrase.navigation = a new {Result} where {0, ETA} {1, price}
Result.price#phrase.action = set the price of {this} to {price}
Result.price#phrase.addition_setter = add {price} to the price of {this}
Result.price#phrase.navigation = {price} of {this}
Result.price#phrase.subtraction_setter = subtract {price} from the price of {this}

# Shipment
Shipment#concept.label = Shipment
Shipment.Shipment(Dimension,double)#phrase.navigation = a new {Shipment} where {0, size} {1, weight}
Shipment.size#phrase.action = set the size of {this} to {size}
Shipment.size#phrase.clearer = clear the size of {this}
Shipment.size#phrase.navigation = {size} of {this}
Shipment.weight#phrase.action = set the weight of {this} to {weight}
Shipment.weight#phrase.addition_setter = add {weight} to the weight of {this}
Shipment.weight#phrase.navigation = {weight} of {this}
Shipment.weight#phrase.subtraction_setter = subtract {weight} from the weight of {this}

# Transport
Transport#concept.label = Transport
Transport.air#instance.label = Air
Transport.ground#instance.label = Ground
